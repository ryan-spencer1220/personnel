This is the grading rubric for the Personnel programming assignment.

================
If the program fails to compile, crashes, or hangs then the program
automatically gets a 0.
================

Functionality	     5
 - The output for huge.txt matches huge.txt.out 100%
 - Program performance will be graded based by running the program on huge.txt
   then points assigned based on runtime. The program has to produce correct
   output as well.
      < 1.5 seconds	5 points
      < 3 seconds	4 points
      < 6 seconds	3 points
      < 10 seconds	2 points
      < 15 seconds	1 point
      > 15 seconds	0 points

Implementation	    10
 - The Hashtable uses a LinkedList to handle collisions
 - All classes with pointer data members contain or explicitly delete (with
   the delete keyword) the copy constructor and assignment operator.
 - All classes with pointer data members have destructors
 - No memory leaks or memory errors
 - The hashtable uses a dynamically allocated array for storage with 9973 rows
 - String data is represented using dynamically allocated char* (or char[])
 - There are no fixed-sized character arrays (except for in personnel.cpp)
 - The file personnel.cpp is unchanged

Design		     3
 - The program has at least the following classes: Person, PersonMgr,
   Hashtable, LinkedList
 - The PersonMgr class doesn't contain any implementation of the Hashtable
 - The Hashtable class doesn't do any output
 
Style		     2
 - Each class is defined in a separate file
 - The class definition and implementation are in separate files (unless a template)
 - There is at most 1 return statement per function or method
 - There is no use of "break" or "continue" in a loop

Total:		    20
